{"version":3,"file":"formFields-textInput-stories.2e87584d.iframe.bundle.js","mappings":";;;;;AAeA;;;ACNA;;AAQA;;;;;;ACFA;;;;;;ACTA;;;;;;;;;;ACNA;;ACAA;;;;;ACKA;;;ACLA;;;;ACIA;;;;;AAKA;AACA;AACA;;;;;;;;;;AAUA;;;;;;AAMA;AACA;;;;;;;;;;;;ACxBA;;;;;AAKA;;;AAGA;AACA;;;;;;;;;;;;;;AAcA;AACA;AACA;;;;;;AAMA;;;;AAIA;;;;;;;;ACvCA;ACCA;AACA;;;;AAIA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;ACdA;;;AAGA;AACA;;;;;AAKA;;AAEA;AACA;AACA;AACA;;;AAGA;;;;;;AAMA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;AAKA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","sources":["webpack://storybook-react19/./src/utils/ImportBlock.tsx","webpack://storybook-react19/./src/utils/DescriptionBlock.tsx","webpack://storybook-react19/./src/utils/Comment.tsx","webpack://storybook-react19/../../packages/react/dist/formFields/FieldWrapper/index.js","webpack://storybook-react19/../../packages/react/dist/formFields/styled.js","webpack://storybook-react19/../../packages/react/dist/formFields/TextArea/index.js","webpack://storybook-react19/../../packages/react/dist/formFields/TextInput/styled.js","webpack://storybook-react19/../../packages/react/dist/formFields/TextInput/index.js","webpack://storybook-react19/../../packages/react/dist/formFields/Checkbox/styled.js","webpack://storybook-react19/../../packages/react/dist/formFields/Toggle/styled.js","webpack://storybook-react19/../../packages/react/dist/formFields/Toggle/index.js","webpack://storybook-react19/../../packages/react/dist/grid/GridColumn.js","webpack://storybook-react19/../../packages/react/dist/grid/GridContainer.js"],"sourcesContent":["import { GridColumn } from '@tiger-analytics/react/grid';\nimport React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nexport const ImportBlockDiv = styled.div`\n  padding-bottom: 10px;\n  border-bottom: 1px solid var(--colors-primary-base);\n  margin-bottom: 10px;\n  width: 100%;\n`;\n\nexport interface ImportBlockProps {\n  importStatement: ReactNode;\n}\n\nexport const ImportBlock = ({ importStatement }: ImportBlockProps) => {\n  return (\n    <GridColumn>\n      <ImportBlockDiv>{importStatement}</ImportBlockDiv>\n    </GridColumn>\n  );\n};\n","import { GridColumn, GridContainer } from '@tiger-analytics/react/grid';\nimport React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nexport const DescriptionBeforeSpacer = styled(GridColumn)`\n  border-bottom: 1px solid var(--colors-primary-base);\n  font-weight: bold;\n`;\n\nexport const DescriptionContent = styled(GridColumn)`\n  font-size: 14px;\n`;\n\nexport interface DescriptionBlockProps {\n  description: ReactNode;\n}\n\nexport const DescriptionBlock = ({ description }: DescriptionBlockProps) => {\n  return (\n    <GridContainer showSideMargin={false}>\n      <GridColumn>\n        <DescriptionBeforeSpacer>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        </DescriptionBeforeSpacer>\n      </GridColumn>\n      <DescriptionContent>{description}</DescriptionContent>\n    </GridContainer>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nexport const CommentContainer = styled.div`\n  width: 100%;\n  font-size: 12px;\n  color: var(--colors-success-base);\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport interface CommentBlockProps {\n  children: ReactNode;\n}\n\nexport const CommentBlock = ({ children }: CommentBlockProps) => {\n  return <CommentContainer>{children}</CommentContainer>;\n};\n","import styled,{css}from\"styled-components\";export const FieldWrapper=styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 4px;\n\n  ${({disabled:e=!1})=>e&&css`\n      opacity: 0.6;\n    `}\n`;","import styled from\"styled-components\";export const FieldDescription=styled.div`\n  font-size: 14px;\n`;","import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";import{StyledTextArea}from\"./styled\";import{FieldWrapper}from\"../FieldWrapper\";import{FieldDescription}from\"../styled\";export const TextArea=e=>{const{id:r,label:i,description:s,disabled:d=!1,rows:t=4,onChangeHandler:a,onChange:l,...o}=e;return _jsxs(FieldWrapper,{disabled:d,children:[i&&_jsx(\"label\",{htmlFor:`${r}-input`,children:i}),_jsx(StyledTextArea,{id:`${r}-input`,disabled:d,rows:t,\"aria-describedby\":s?`${r}-description`:\"\",onChange:e=>{l?l(e):a?.(e.target.value)},...o}),s&&_jsx(FieldDescription,{id:`${r}-description`,children:s})]})};","import styled from\"styled-components\";import{FieldSize}from\"../types\";export const StyledInput=styled.input`\n  width: 100%;\n  font-size: 20px;\n  padding-left: 4px;\n  padding-right: 4px;\n  height: ${({size:e})=>e===FieldSize.Default?\"40px\":\"30px\"};\n  border-radius: var(--global-componentRadius);\n  border: 1px solid var(--colors-primary-base);\n`;","import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";import{FieldSize}from\"../types\";import{FieldWrapper}from\"../FieldWrapper\";import{FieldDescription}from\"../styled\";import{StyledInput}from\"./styled\";export const TextInput=e=>{const{id:i,size:t=FieldSize.Default,type:r=\"text\",label:s,description:d,disabled:l=!1,onChangeHandler:p,onChange:n,...o}=e;return _jsxs(FieldWrapper,{disabled:l,children:[s&&_jsx(\"label\",{htmlFor:`${i}-input`,children:s}),_jsx(StyledInput,{id:`${i}-input`,disabled:l,size:t,type:r,\"aria-describedby\":d?`${i}-description`:\"\",onChange:e=>{n?n(e):p?.(e.target.value)},...o}),d&&_jsx(FieldDescription,{id:`${i}-description`,children:d})]})};","import styled,{css}from\"styled-components\";import{FieldSize}from\"../types\";export const StyledCheckboxContainer=styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;export const StyledCheckboxInput=styled.input`\n  position: absolute;\n  opacity: 0;\n  width: 0px;\n  height: 0px;\n`;export const StyledCheckbox=styled.div`\n  width: ${({size:e})=>e===FieldSize.Default?\"40px\":\"30px\"};\n  height: ${({size:e})=>e===FieldSize.Default?\"40px\":\"30px\"};\n  border-radius: var(--global-componentRadius);\n  border: 1px solid var(--colors-primary-base);\n  background-color: var(--colors-background-base);\n  transition: all 0.25s;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  ${({checked:e,size:o})=>e&&css`\n      background-color: var(--colors-primary-base);\n      border-color: var(--colors-primary-base);\n\n      svg {\n        fill: var(--colors-background-base);\n        width: ${o===FieldSize.Default?\"30px\":\"24px\"};\n        height: ${o===FieldSize.Default?\"30px\":\"24px\"};\n      }\n    `}\n\n  &:focus-within {\n    outline: none;\n    border: 2px solid var(--colors-primary-active);\n  }\n`;","import styled,{css}from\"styled-components\";import{FieldSize}from\"../types\";export const StyledToggleContainer=styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;export const StyledToggleInput=styled.input`\n  position: absolute;\n  opacity: 0;\n  width: 0px;\n  height: 0px;\n`;export const StyledToggle=styled.div`\n  display: flex;\n  align-items: center;\n  width: ${({size:e})=>e===FieldSize.Default?\"50px\":\"40px\"};\n  height: ${({size:e})=>e===FieldSize.Default?\"24px\":\"20px\"};\n  border-radius: 25px;\n  border: 2px solid var(--colors-primary-base);\n  background-color: white;\n  transition: all 0.25s;\n  cursor: pointer;\n\n  &:hover {\n    border: 2px solid var(--colors-primary-hover);\n  }\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: ${({size:e})=>e===FieldSize.Default?\"18px\":\"14px\"};\n    height: ${({size:e})=>e===FieldSize.Default?\"18px\":\"14px\"};\n    background-color: ${({theme:e,checked:o})=>o?e.colors.success.base:e.colors.primary.hover};\n    margin-left: 2px;\n    border-radius: 50%;\n    transition: all 0.25s;\n  }\n\n  ${({checked:e,size:o})=>e&&css`\n      border-color: var(--colors-primary-base);\n\n      &::before {\n        transform: ${o===FieldSize.Default?\"translateX(24px)\":\"translateX(18px)\"};\n      }\n    `}\n\n  &:focus-within {\n    outline: none;\n    border: 2px solid var(--colors-primary-hover);\n  }\n`;","import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";import{useRef}from\"react\";import{FieldSize}from\"../types\";import{FieldWrapper}from\"../FieldWrapper\";import{FieldDescription}from\"../styled\";import{StyledToggleContainer,StyledToggleInput,StyledToggle}from\"./styled\";export const Toggle=e=>{const{id:i,size:r=FieldSize.Default,label:l,description:d,disabled:t=!1,checked:o=!1,onChange:s,onChangeHandler:c,...n}=e,a=useRef(null);return _jsxs(FieldWrapper,{disabled:t,children:[_jsxs(StyledToggleContainer,{children:[_jsx(StyledToggle,{id:i,size:r,checked:o,onClick:()=>{a&&a.current&&!t&&a.current.click()},children:_jsx(StyledToggleInput,{id:`${i}-checkbox`,ref:a,type:\"checkbox\",disabled:t,checked:o,\"aria-describedby\":d?`${i}-description`:\"\",onChange:e=>{s?s(e):c?.(e.target.checked)},...n})}),l&&_jsx(\"label\",{htmlFor:`${i}-checkbox`,children:l})]}),d&&_jsx(FieldDescription,{id:`${i}-description`,children:d})]})};","import styled,{css}from\"styled-components\";export const GridColumn=styled.div`\n  grid-column: ${e=>`span ${e.sm||e.theme.grid.small.columns}`};\n  display: ${e=>0===e.sm?\"none\":\"flex\"};\n  flex-direction: column;\n  align-items: 'flex-start';\n\n  ${({theme:e,md:n,lg:m})=>css`\n    @media screen and (min-width: ${`${e.breakpoints.medium}`}) {\n      grid-column: ${e=>`span ${n||m||e.theme.grid.medium.columns}`};\n      display: ${0===n?\"none\":\"flex\"};\n    }\n\n    @media screen and (min-width: ${`${e.breakpoints.large}`}) {\n      grid-column: ${e=>`span ${m||e.theme.grid.large.columns}`};\n      display: ${0===m?\"none\":\"flex\"};\n    }\n  `}\n`;","import styled,{css}from\"styled-components\";export const GridContainer=styled.div`\n  display: grid;\n  width: 100%;\n  grid-gap: ${({theme:i})=>i.grid.small.gutter};\n  grid-template-columns: repeat(${({theme:i})=>i.grid.small.columns}, 1fr);\n  grid-template-rows: initial;\n  grid-auto-rows: initial;\n  margin: 0;\n  max-width: 100%;\n  grid-column: span ${({theme:i})=>i.grid.small.columns};\n\n  ${({showSideMargin:i})=>i&&css`\n      max-width: calc(100% - ${({theme:i})=>i.grid.small.margin} * 2);\n      margin-left: ${({theme:i})=>i.grid.small.margin} !important;\n      margin-right: ${({theme:i})=>i.grid.small.margin} !important;\n    `}\n\n  ${({restrictHeightToMaxContent:i})=>i&&css`\n      grid-template-rows: max-content;\n      grid-auto-rows: max-content;\n    `}\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(${({theme:i})=>i.grid.medium.columns}, 1fr);\n    margin: 0;\n    grid-gap: ${({theme:i})=>i.grid.medium.gutter};\n    max-width: 100%;\n    grid-column: span ${({theme:i})=>i.grid.medium.columns};\n\n    ${({showSideMargin:i})=>i&&css`\n        max-width: calc(100% - ${({theme:i})=>i.grid.medium.margin} * 2);\n        margin-left: ${({theme:i})=>i.grid.medium.margin} !important;\n        margin-right: ${({theme:i})=>i.grid.medium.margin} !important;\n      `}\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: repeat(${({theme:i})=>i.grid.large.columns}, 1fr);\n    margin: 0;\n    grid-gap: ${({theme:i})=>i.grid.large.gutter};\n    grid-column: span ${({theme:i})=>i.grid.large.columns};\n\n    ${({showSideMargin:i})=>i&&css`\n        max-width: calc(100% - ${({theme:i})=>i.grid.large.margin} * 2);\n        margin-left: ${({theme:i})=>i.grid.large.margin} !important;\n        margin-right: ${({theme:i})=>i.grid.large.margin} !important;\n      `}\n  }\n`;"],"names":[],"sourceRoot":""}