{"version":3,"file":"loader-LoadingBar-stories.db88a8bd.iframe.bundle.js","mappings":";;;;;AAeA;;;ACNA;;AAQA;;;;;;ACFA;ACdA;AACA;;;;AAIA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;ACdA;;;AAGA;AACA;;;;;AAKA;;AAEA;AACA;AACA;AACA;;;AAGA;;;;;;AAMA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;AAKA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;AC1CA;AACA;AACA;;AAEA;;AAEA;ACTA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;;;;;;;;;;;;;;;;AAiBA;;;;;;;;;;;;;;;;;;AAkBA","sources":["webpack://storybook-react19/./src/utils/ImportBlock.tsx","webpack://storybook-react19/./src/utils/DescriptionBlock.tsx","webpack://storybook-react19/./src/utils/Comment.tsx","webpack://storybook-react19/../../packages/react/dist/grid/GridColumn.js","webpack://storybook-react19/../../packages/react/dist/grid/GridContainer.js","webpack://storybook-react19/../../packages/react/dist/loader/Spinner.js","webpack://storybook-react19/../../packages/react/dist/loader/LoadingBar.js"],"sourcesContent":["import { GridColumn } from '@tiger-analytics/react/grid';\nimport React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nexport const ImportBlockDiv = styled.div`\n  padding-bottom: 10px;\n  border-bottom: 1px solid var(--colors-primary-base);\n  margin-bottom: 10px;\n  width: 100%;\n`;\n\nexport interface ImportBlockProps {\n  importStatement: ReactNode;\n}\n\nexport const ImportBlock = ({ importStatement }: ImportBlockProps) => {\n  return (\n    <GridColumn>\n      <ImportBlockDiv>{importStatement}</ImportBlockDiv>\n    </GridColumn>\n  );\n};\n","import { GridColumn, GridContainer } from '@tiger-analytics/react/grid';\nimport React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nexport const DescriptionBeforeSpacer = styled(GridColumn)`\n  border-bottom: 1px solid var(--colors-primary-base);\n  font-weight: bold;\n`;\n\nexport const DescriptionContent = styled(GridColumn)`\n  font-size: 14px;\n`;\n\nexport interface DescriptionBlockProps {\n  description: ReactNode;\n}\n\nexport const DescriptionBlock = ({ description }: DescriptionBlockProps) => {\n  return (\n    <GridContainer showSideMargin={false}>\n      <GridColumn>\n        <DescriptionBeforeSpacer>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        </DescriptionBeforeSpacer>\n      </GridColumn>\n      <DescriptionContent>{description}</DescriptionContent>\n    </GridContainer>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nexport const CommentContainer = styled.div`\n  width: 100%;\n  font-size: 12px;\n  color: var(--colors-success-base);\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport interface CommentBlockProps {\n  children: ReactNode;\n}\n\nexport const CommentBlock = ({ children }: CommentBlockProps) => {\n  return <CommentContainer>{children}</CommentContainer>;\n};\n","import styled,{css}from\"styled-components\";export const GridColumn=styled.div`\n  grid-column: ${e=>`span ${e.sm||e.theme.grid.small.columns}`};\n  display: ${e=>0===e.sm?\"none\":\"flex\"};\n  flex-direction: column;\n  align-items: 'flex-start';\n\n  ${({theme:e,md:n,lg:m})=>css`\n    @media screen and (min-width: ${`${e.breakpoints.medium}`}) {\n      grid-column: ${e=>`span ${n||m||e.theme.grid.medium.columns}`};\n      display: ${0===n?\"none\":\"flex\"};\n    }\n\n    @media screen and (min-width: ${`${e.breakpoints.large}`}) {\n      grid-column: ${e=>`span ${m||e.theme.grid.large.columns}`};\n      display: ${0===m?\"none\":\"flex\"};\n    }\n  `}\n`;","import styled,{css}from\"styled-components\";export const GridContainer=styled.div`\n  display: grid;\n  width: 100%;\n  grid-gap: ${({theme:i})=>i.grid.small.gutter};\n  grid-template-columns: repeat(${({theme:i})=>i.grid.small.columns}, 1fr);\n  grid-template-rows: initial;\n  grid-auto-rows: initial;\n  margin: 0;\n  max-width: 100%;\n  grid-column: span ${({theme:i})=>i.grid.small.columns};\n\n  ${({showSideMargin:i})=>i&&css`\n      max-width: calc(100% - ${({theme:i})=>i.grid.small.margin} * 2);\n      margin-left: ${({theme:i})=>i.grid.small.margin} !important;\n      margin-right: ${({theme:i})=>i.grid.small.margin} !important;\n    `}\n\n  ${({restrictHeightToMaxContent:i})=>i&&css`\n      grid-template-rows: max-content;\n      grid-auto-rows: max-content;\n    `}\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(${({theme:i})=>i.grid.medium.columns}, 1fr);\n    margin: 0;\n    grid-gap: ${({theme:i})=>i.grid.medium.gutter};\n    max-width: 100%;\n    grid-column: span ${({theme:i})=>i.grid.medium.columns};\n\n    ${({showSideMargin:i})=>i&&css`\n        max-width: calc(100% - ${({theme:i})=>i.grid.medium.margin} * 2);\n        margin-left: ${({theme:i})=>i.grid.medium.margin} !important;\n        margin-right: ${({theme:i})=>i.grid.medium.margin} !important;\n      `}\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: repeat(${({theme:i})=>i.grid.large.columns}, 1fr);\n    margin: 0;\n    grid-gap: ${({theme:i})=>i.grid.large.gutter};\n    grid-column: span ${({theme:i})=>i.grid.large.columns};\n\n    ${({showSideMargin:i})=>i&&css`\n        max-width: calc(100% - ${({theme:i})=>i.grid.large.margin} * 2);\n        margin-left: ${({theme:i})=>i.grid.large.margin} !important;\n        margin-right: ${({theme:i})=>i.grid.large.margin} !important;\n      `}\n  }\n`;","import styled,{keyframes}from\"styled-components\";export const rotate=keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;export const Spinner=styled.div`\n  width: ${({size:r})=>`${r}px`};\n  height: ${({size:r})=>`${r}px`};\n  border-radius: 50%;\n  border: ${({color:r=\"var(--colors-primary-base)\"})=>`4px solid ${r}`};\n  border-top-color: transparent;\n  animation: ${rotate} 1s linear infinite;\n`;","import styled from\"styled-components\";export const LoadingBar=styled.div`\n  @keyframes expanding {\n    0% {\n      transform: scaleX(0);\n      opacity: 0;\n    }\n    100% {\n      transform: scaleX(1);\n      opacity: 1;\n    }\n  }\n\n  @keyframes moving {\n    0% {\n      background-position: 0 0;\n    }\n    100% {\n      background-position: -200% 0;\n    }\n  }\n\n  height: 1.25rem;\n  width: 80%;\n  margin: 2rem 0;\n  position: relative;\n  transform-origin: left;\n  animation:\n    expanding 0.4s 0.7s forwards linear,\n    moving 1s 1s infinite forwards linear;\n  border-radius: 0.125rem;\n  background-image: ${({theme:r})=>`linear-gradient(to right, ${r.colors.background.base} 30%, ${r.colors.primary.base} 60%,  ${r.colors.background.base})`};\n  background-size: 200% auto;\n  opacity: 0;\n  animation-delay: 100ms;\n\n  &:before {\n    display: block;\n    height: 1.25rem;\n    content: '';\n    width: 60%;\n    position: relative;\n    top: -2rem;\n    transform-origin: left;\n    animation:\n      expanding 0.4s 0.7s forwards linear,\n      moving 1s 1s infinite forwards linear;\n    border-radius: 0.125rem;\n    background-image: ${({theme:r})=>`linear-gradient(to right, ${r.colors.background.base} 30%, ${r.colors.primary.base} 60%,  ${r.colors.background.base})`};\n    background-size: 200% auto;\n    opacity: 0;\n    animation-delay: 100ms;\n  }\n\n  &:after {\n    display: block;\n    height: 1.25rem;\n    content: '';\n    width: 80%;\n    position: relative;\n    top: 0.75rem;\n    transform-origin: left;\n    animation:\n      expanding 0.4s 0.7s forwards linear,\n      moving 1s 1s infinite forwards linear;\n    border-radius: 0.125rem;\n    background-image: ${({theme:r})=>`linear-gradient(to right, ${r.colors.background.base} 30%, ${r.colors.primary.base} 60%,  ${r.colors.background.base})`};\n    background-size: 200% auto;\n    opacity: 0;\n    animation-delay: 100ms;\n  }\n`;"],"names":[],"sourceRoot":""}