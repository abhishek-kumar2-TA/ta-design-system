"use strict";(self.webpackChunkstorybook_react19=self.webpackChunkstorybook_react19||[]).push([[177],{"./src/formFields/textArea.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CodeAndAccessibility:()=>CodeAndAccessibility,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_tiger_analytics_react_formFields__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../packages/react/dist/formFields/index.js"),_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../packages/react/dist/grid/index.js"),_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/utils/index.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Form/TextArea",component:_tiger_analytics_react_formFields__WEBPACK_IMPORTED_MODULE_1__.fs,parameters:{controls:{expanded:!0}},argTypes:{id:{description:"Mandatory - unique id for testing",table:{defaultValue:{summary:""}},control:"text"},label:{description:"Label for the input",table:{defaultValue:{summary:""}},control:"text"},description:{description:"Additional description for the field",table:{defaultValue:{summary:""}},control:"text"},onChangeHandler:{description:"`(value: string) => void` Preferred method to use instead of onChange as it reduces the need to extract string from the event.",table:{category:"Events"},control:!1}}},description=react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("b",null,"Note:")," TextArea is a customizable textarea field component and"," ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("b",null,"it inherits all the properties of a standard HTML textarea element"),". You can use attributes like disabled, placeholder, style, etc.,"," ","just as you would with a regular <textarea> tag in addition to below\n    props."," ","It also has ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("b",null,"onChangeHandler")," method of type ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("b",null,"(value: string) => void")," which reduces the need to extract string from the event."," ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("b",null,"For convenience, use the onChangeHandler")," to directly access the string value.",react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement("i",null,"If both onChange and onChangeHandler are provided, onChange takes precedence."),react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("b",null,"Note :"),"To group multiple input fields, fieldset should be used.",react__WEBPACK_IMPORTED_MODULE_0__.createElement("a",{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset",target:"_blank",rel:"noreferrer"},"Read more about fieldset"))),CodeAndAccessibility=(args=>{const{value,...rest}=args,[textAreaValue,setTextAreaValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(value??"");return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_2__.E,{showSideMargin:!1},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_utils__WEBPACK_IMPORTED_MODULE_3__.Tx,{importStatement:"import { TextArea } from '@tiger-analytics/react/formFields';"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_2__.H,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_formFields__WEBPACK_IMPORTED_MODULE_1__.fs,{value:textAreaValue,...rest,onChangeHandler:setTextAreaValue}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,"Entered text: ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{id:"entered-text"},textAreaValue))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_utils__WEBPACK_IMPORTED_MODULE_3__.ur,{description}))}).bind({});CodeAndAccessibility.args={id:"test-input",label:"Label",disabled:!1,description:"Some description",value:"",rows:4};const __namedExportsOrder=["CodeAndAccessibility"];CodeAndAccessibility.parameters={...CodeAndAccessibility.parameters,docs:{...CodeAndAccessibility.parameters?.docs,source:{originalSource:"(args: TextAreaProps) => {\n  const {\n    value,\n    ...rest\n  } = args;\n  const [textAreaValue, setTextAreaValue] = useState(value ?? '');\n  return <GridContainer showSideMargin={false}>\n      <ImportBlock importStatement={`import { TextArea } from '@tiger-analytics/react/formFields';`} />\n      <GridColumn>\n        <TextArea value={textAreaValue} {...rest} onChangeHandler={setTextAreaValue} />\n        <p>\n          Entered text: <span id=\"entered-text\">{textAreaValue}</span>\n        </p>\n      </GridColumn>\n      <DescriptionBlock description={description} />\n    </GridContainer>;\n}",...CodeAndAccessibility.parameters?.docs?.source}}}}}]);