"use strict";(self.webpackChunkstorybook_react19=self.webpackChunkstorybook_react19||[]).push([[365],{"./src/overlay/Drawer/Drawer.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CodeAndAccessibility:()=>CodeAndAccessibility,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_tiger_analytics_ui__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../packages/ui/dist/index.js"),_tiger_analytics_react_overlay__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../packages/react/dist/overlay/index.js"),_tiger_analytics_react_button__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../packages/react/dist/button/index.js"),_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("../../packages/react/dist/grid/index.js"),_tiger_analytics_react_formFields__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("../../packages/react/dist/formFields/index.js"),styled_components__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js"),_utils__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./src/utils/index.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Overlay/Drawer/Drawer",component:_tiger_analytics_react_overlay__WEBPACK_IMPORTED_MODULE_2__._s,parameters:{controls:{expanded:!0}},argTypes:{id:{description:"Mandatory - unique id for testing",table:{defaultValue:{summary:""}},control:"text"},visible:{description:"Controls the visibility of the drawer",table:{defaultValue:{summary:"false"}},control:!1},onClose:{description:"Task to perform on close of the drawer.",table:{category:"Custom Events"},control:!1},onSubmit:{description:"Task to perform on submit of the drawer. If the current slide has validate property then its outcome (true/false) will decide if onSubmit will be executed or not.",table:{category:"Custom Events"},control:!1},goToStep:{description:"Multi-step only method - This method is available to programmaticaly navigate to a particular slide",table:{category:"Methods"},control:!1}}},ErrorContainer=styled_components__WEBPACK_IMPORTED_MODULE_7__.Ay.div`
  font-size: 0.8rem;
  color: red;
`,CodeAndAccessibility=(args=>{const[isSingleStepDrawrrVisible,setIsSingleStepDrawrrVisible]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[isMultiStepDrawrrVisible,setIsMultiStepDrawrrVisible]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[taskName,setTaskName]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[taskDescription,setTaskDescription]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[error,setError]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),drawerCloseHandler=(drawerId,drawerOpenerId)=>{const drawerActivateButton=document.getElementById(drawerOpenerId);drawerActivateButton&&drawerActivateButton.focus(),drawerId===`${args.id}-single`?setIsSingleStepDrawrrVisible(!1):setIsMultiStepDrawrrVisible(!1),setTaskName(""),setTaskDescription(""),setError("")},taskNameChangeHandler=event=>{const inputTarget=event.target;setTaskName(inputTarget.value),setError("")},taskDescriptionChangeHandler=event=>{const inputTarget=event.target;setTaskDescription(inputTarget.value),setError("")},slide1Validator=()=>!(!taskName||!taskDescription)||(setError("Both name and description are required."),!1);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_4__.E,{showSideMargin:!1},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_utils__WEBPACK_IMPORTED_MODULE_6__.Tx,{importStatement:"import { Drawer, DrawerSlide } from '@tiger-analytics/react/overlay';"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_4__.H,{style:{gap:"10px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_button__WEBPACK_IMPORTED_MODULE_3__.$,{id:"activate-drawer-single",onClick:()=>setIsSingleStepDrawrrVisible(!0),variant:_tiger_analytics_ui__WEBPACK_IMPORTED_MODULE_1__.Ak.Secondary},"Show single step drawer"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_button__WEBPACK_IMPORTED_MODULE_3__.$,{id:"activate-drawer-multi",onClick:()=>setIsMultiStepDrawrrVisible(!0),variant:_tiger_analytics_ui__WEBPACK_IMPORTED_MODULE_1__.Ak.Secondary},"Show Multi step drawer"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_overlay__WEBPACK_IMPORTED_MODULE_2__._s,{id:`${args.id}-single`,visible:isSingleStepDrawrrVisible,onClose:()=>drawerCloseHandler(`${args.id}-single`,"activate-drawer-single"),onSubmit:()=>drawerCloseHandler(`${args.id}-single`,"activate-drawer-single")},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_overlay__WEBPACK_IMPORTED_MODULE_2__.V,{id:"slide-1",title:"Slide 1",validate:slide1Validator},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_formFields__WEBPACK_IMPORTED_MODULE_5__.pd,{id:"create-task-name",label:"Name",value:taskName,onInput:taskNameChangeHandler}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_formFields__WEBPACK_IMPORTED_MODULE_5__.fs,{id:"create-task-description",label:"Description",value:taskDescription,onInput:taskDescriptionChangeHandler,required:!0}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorContainer,null,error))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_overlay__WEBPACK_IMPORTED_MODULE_2__._s,{id:`${args.id}-multi`,visible:isMultiStepDrawrrVisible,onClose:()=>drawerCloseHandler(`${args.id}-multi`,"activate-drawer-multi"),onSubmit:()=>drawerCloseHandler(`${args.id}-multi`,"activate-drawer-multi")},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_overlay__WEBPACK_IMPORTED_MODULE_2__.V,{id:"slide-2",title:"Slide 1",validate:slide1Validator},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_formFields__WEBPACK_IMPORTED_MODULE_5__.pd,{id:"create-task-name",label:"Name",value:taskName,onInput:taskNameChangeHandler}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_formFields__WEBPACK_IMPORTED_MODULE_5__.fs,{id:"create-task-description",label:"Description",value:taskDescription,onInput:taskDescriptionChangeHandler,required:!0}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(ErrorContainer,null,error)),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_overlay__WEBPACK_IMPORTED_MODULE_2__.V,{id:"slide-2",title:"Slide 2"},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,"Step 2 Content"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_button__WEBPACK_IMPORTED_MODULE_3__.$,{id:"demo-goToStep-method",onClick:()=>{document.getElementById(`${args.id}-multi`).goToStep(0)}},"programmatically navigate to slide 1"))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_overlay__WEBPACK_IMPORTED_MODULE_2__.V,{id:"slide-3",title:"Slide 3"},"Slide 3 content"))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_4__.H,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"story-title"},"       ")),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_4__.H,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_utils__WEBPACK_IMPORTED_MODULE_6__.ur,{description:"The ta-drawer component is used to display sliding drawers, typically from the right side of the screen. It is ideal for scenarios where you need to present additional content or actions without interrupting the main flow. It can support both single-step and multi-step content.\n\nUse it when you need to slide in additional content or actions, such as forms, information panels, or progress steps. The drawer can be controlled to navigate between steps (in the case of multi-step drawers)."})))}).bind({});CodeAndAccessibility.args={id:"test-drawer",visible:!1};const __namedExportsOrder=["CodeAndAccessibility"];CodeAndAccessibility.parameters={...CodeAndAccessibility.parameters,docs:{...CodeAndAccessibility.parameters?.docs,source:{originalSource:'args => {\n  const [isSingleStepDrawrrVisible, setIsSingleStepDrawrrVisible] = useState(false);\n  const [isMultiStepDrawrrVisible, setIsMultiStepDrawrrVisible] = useState(false);\n  const [taskName, setTaskName] = useState(\'\');\n  const [taskDescription, setTaskDescription] = useState(\'\');\n  const [error, setError] = useState(\'\');\n  const drawerCloseHandler = (drawerId: string, drawerOpenerId: string) => {\n    const drawerActivateButton = document.getElementById(drawerOpenerId);\n    if (drawerActivateButton) {\n      drawerActivateButton.focus();\n    }\n    if (drawerId === `${args.id}-single`) {\n      setIsSingleStepDrawrrVisible(false);\n    } else {\n      setIsMultiStepDrawrrVisible(false);\n    }\n    setTaskName(\'\');\n    setTaskDescription(\'\');\n    setError(\'\');\n  };\n  const programmaticallyNavigateTo1Handler = () => {\n    const drawer = document.getElementById(`${args.id}-multi`) as DrawerComponentWC;\n    drawer.goToStep(0);\n  };\n  const taskNameChangeHandler = (event: FormEvent) => {\n    const inputTarget = event.target as HTMLInputElement;\n    setTaskName(inputTarget.value);\n    setError(\'\');\n  };\n  const taskDescriptionChangeHandler = (event: FormEvent) => {\n    const inputTarget = event.target as HTMLTextAreaElement;\n    setTaskDescription(inputTarget.value);\n    setError(\'\');\n  };\n  const slide1Validator = (): boolean => {\n    if (!taskName || !taskDescription) {\n      setError(\'Both name and description are required.\');\n      return false;\n    } else {\n      return true;\n    }\n  };\n  return <GridContainer showSideMargin={false}>\n      <ImportBlock importStatement={`import { Drawer, DrawerSlide } from \'@tiger-analytics/react/overlay\';`} />\n      <GridColumn style={{\n      gap: \'10px\'\n    }}>\n        <Button id="activate-drawer-single" onClick={() => setIsSingleStepDrawrrVisible(true)} variant={ButtonVariant.Secondary}>\n          Show single step drawer\n        </Button>\n        <Button id="activate-drawer-multi" onClick={() => setIsMultiStepDrawrrVisible(true)} variant={ButtonVariant.Secondary}>\n          Show Multi step drawer\n        </Button>\n        <Drawer id={`${args.id}-single`} visible={isSingleStepDrawrrVisible} onClose={() => drawerCloseHandler(`${args.id}-single`, \'activate-drawer-single\')} onSubmit={() => drawerCloseHandler(`${args.id}-single`, \'activate-drawer-single\')}>\n          <DrawerSlide id="slide-1" title="Slide 1" validate={slide1Validator}>\n            <Input id="create-task-name" label="Name" value={taskName} onInput={taskNameChangeHandler} />\n            <TextArea id="create-task-description" label="Description" value={taskDescription} onInput={taskDescriptionChangeHandler} required />\n            <ErrorContainer>{error}</ErrorContainer>\n          </DrawerSlide>\n        </Drawer>\n        <Drawer id={`${args.id}-multi`} visible={isMultiStepDrawrrVisible} onClose={() => drawerCloseHandler(`${args.id}-multi`, \'activate-drawer-multi\')} onSubmit={() => drawerCloseHandler(`${args.id}-multi`, \'activate-drawer-multi\')}>\n          <DrawerSlide id="slide-2" title="Slide 1" validate={slide1Validator}>\n            <Input id="create-task-name" label="Name" value={taskName} onInput={taskNameChangeHandler} />\n            <TextArea id="create-task-description" label="Description" value={taskDescription} onInput={taskDescriptionChangeHandler} required />\n            <ErrorContainer>{error}</ErrorContainer>\n          </DrawerSlide>\n          <DrawerSlide id="slide-2" title="Slide 2">\n            <div>\n              <div>Step 2 Content</div>\n              <Button id="demo-goToStep-method" onClick={programmaticallyNavigateTo1Handler}>\n                programmatically navigate to slide 1\n              </Button>\n            </div>\n          </DrawerSlide>\n          <DrawerSlide id="slide-3" title="Slide 3">\n            Slide 3 content\n          </DrawerSlide>\n        </Drawer>\n      </GridColumn>\n\n      <GridColumn>\n        <div className="story-title">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\n      </GridColumn>\n\n      <GridColumn>\n        <DescriptionBlock description={description} />\n      </GridColumn>\n    </GridContainer>;\n}',...CodeAndAccessibility.parameters?.docs?.source}}}},"./src/utils/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{bO:()=>CommentBlock,ur:()=>DescriptionBlock,Tx:()=>ImportBlock});var grid=__webpack_require__("../../packages/react/dist/grid/index.js"),react=__webpack_require__("../../node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js");const ImportBlockDiv=styled_components_browser_esm.Ay.div`
  padding-bottom: 10px;
  border-bottom: 1px solid var(--colors-primary-base);
  margin-bottom: 10px;
  width: 100%;
`,ImportBlock=({importStatement})=>react.createElement(grid.H,null,react.createElement(ImportBlockDiv,null,importStatement));ImportBlock.__docgenInfo={description:"",methods:[],displayName:"ImportBlock",props:{importStatement:{required:!0,tsType:{name:"ReactNode"},description:""}}};const DescriptionBeforeSpacer=(0,styled_components_browser_esm.Ay)(grid.H)`
  border-bottom: 1px solid var(--colors-primary-base);
  font-weight: bold;
`,DescriptionContent=(0,styled_components_browser_esm.Ay)(grid.H)`
  font-size: 14px;
`,DescriptionBlock=({description})=>react.createElement(grid.E,{showSideMargin:!1},react.createElement(grid.H,null,react.createElement(DescriptionBeforeSpacer,null,"       ")),react.createElement(DescriptionContent,null,description));DescriptionBlock.__docgenInfo={description:"",methods:[],displayName:"DescriptionBlock",props:{description:{required:!0,tsType:{name:"ReactNode"},description:""}}};const CommentContainer=styled_components_browser_esm.Ay.div`
  width: 100%;
  font-size: 12px;
  color: var(--colors-success-base);
`,CommentBlock=({children})=>react.createElement(CommentContainer,null,children);CommentBlock.__docgenInfo={description:"",methods:[],displayName:"CommentBlock",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""}}}},"../../packages/react/dist/button/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Button});var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const Button=i=>{const t={id:i.id};return i.type&&(t.type=i.type),i.style&&(t.style=i.style),i.fill&&(t.fill=i.fill),i.variant&&(t.variant=i.variant),i.size&&(t.size=i.size),i.disabled&&(t.disabled=i.disabled),i.iconOnly&&(t.iconOnly=i.iconOnly),i.ariaLabel&&(t.ariaLabel=i.ariaLabel),i.onClick&&(t.onClick=i.onClick),(0,jsx_runtime.jsx)("ta-button",{...t,children:i.children})}},"../../packages/react/dist/formFields/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Sc:()=>Checkbox,pd:()=>Input,fs:()=>TextArea,lM:()=>Toggle});var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const TextArea=e=>{const t={id:e.id};return e.label&&(t.label=e.label),e.description&&(t.description=e.description),e.type&&(t.type=e.type),e.value&&(t.value=e.value),e.disabled&&(t.disabled=e.disabled),e.placeholder&&(t.placeholder=e.placeholder),e.required&&(t.required=e.required),e.minlength&&(t.minlength=e.minlength),e.maxlength&&(t.maxlength=e.maxlength),e.rows&&(t.rows=e.rows),e.onInput&&(t.onInput=e.onInput),(0,jsx_runtime.jsx)("ta-text-area",{...t})},Input=e=>{const t={id:e.id};return e.label&&(t.label=e.label),e.description&&(t.description=e.description),e.type&&(t.type=e.type),e.value&&(t.value=e.value),e.size&&(t.size=e.size),e.disabled&&(t.disabled=e.disabled),e.placeholder&&(t.placeholder=e.placeholder),e.required&&(t.required=e.required),e.minlength&&(t.minlength=e.minlength),e.maxlength&&(t.maxlength=e.maxlength),e.pattern&&(t.pattern=e.pattern),e.onInput&&(t.onInput=e.onInput),(0,jsx_runtime.jsx)("ta-input",{...t})};var react=__webpack_require__("../../node_modules/react/index.js");const Checkbox=e=>{const c={id:e.id};return e.label&&(c.label=e.label),e.description&&(c.description=e.description),e.size&&(c.size=e.size),e.checked&&(c.checked=e.checked),e.disabled&&(c.disabled=e.disabled),e.required&&(c.required=e.required),(0,react.useEffect)((()=>{const c=c=>{if(e.onChange){const t=c;e.onChange(t)}},t=document.getElementById(e.id);return t&&t.addEventListener("change",c),()=>{t&&t.removeEventListener("change",c)}}),[e.id,e.onChange]),(0,jsx_runtime.jsx)("ta-checkbox",{...c})},Toggle=e=>{const t={id:e.id};return e.label&&(t.label=e.label),e.description&&(t.description=e.description),e.size&&(t.size=e.size),e.checked&&(t.checked=e.checked),e.disabled&&(t.disabled=e.disabled),e.required&&(t.required=e.required),(0,react.useEffect)((()=>{const t=t=>{if(e.onChange){const r=t;e.onChange(r)}},r=document.getElementById(e.id);return r&&r.addEventListener("change",t),()=>{r&&r.removeEventListener("change",t)}}),[e.id,e.onChange]),(0,jsx_runtime.jsx)("ta-toggle",{...t})}},"../../packages/react/dist/grid/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>GridColumn,E:()=>GridContainer});var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const GridColumn=r=>{const s={};return r.sm&&(s.sm=r.sm),r.md&&(s.md=r.md),r.lg&&(s.lg=r.lg),r.style&&(s.style=r.style),(0,jsx_runtime.jsx)("ta-grid-column",{...s,children:r.children})},GridContainer=t=>{const r={};return t.showSideMargin&&(r.showSideMargin=t.showSideMargin),t.restrictHeightToMaxContent&&(r.restrictHeightToMaxContent=t.restrictHeightToMaxContent),t.style&&(r.style=t.style),(0,jsx_runtime.jsx)("ta-grid-container",{...r,children:t.children})}},"../../packages/react/dist/overlay/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{_s:()=>Drawer,V:()=>DrawerSlide,aF:()=>Modal,hJ:()=>Overlay});var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),react=__webpack_require__("../../node_modules/react/index.js");const Overlay=e=>{const n={id:e.id,containerId:e.containerId};return(0,react.useEffect)((()=>{const n=()=>{e.onClose&&e.onClose()},t=document.getElementById(e.id);return t&&t.addEventListener("onClose",n),()=>{t&&t.removeEventListener("onClose",n)}}),[]),e.visible&&(n.visible=e.visible),e.overlayContentAlign&&(n.overlayContentAlign=e.overlayContentAlign),(0,jsx_runtime.jsx)("ta-overlay",{...n,children:e.children})},Modal=e=>{const t={id:e.id};return(0,react.useEffect)((()=>{const t=()=>{e.onClose&&e.onClose()},o=document.getElementById(e.id);return o&&o.addEventListener("onClose",t),()=>{o&&o.removeEventListener("onClose",t)}}),[]),e.visible&&(t.visible=e.visible),e.title&&(t.title=e.title),(0,jsx_runtime.jsx)("ta-modal",{...t,children:e.children})},Drawer=e=>{const{onClose:r,onSubmit:t}=e,n={id:e.id};return(0,react.useEffect)((()=>{const n=()=>{r&&r()},i=()=>{t&&t()},o=document.getElementById(e.id);return o&&(o.addEventListener("onClose",n),o.addEventListener("onSubmit",i)),()=>{o&&(o.removeEventListener("onClose",n),o.removeEventListener("onSubmit",i))}}),[r,t]),e.visible&&(n.visible=e.visible),(0,jsx_runtime.jsx)("ta-drawer",{...n,children:e.children})},DrawerSlide=e=>{const t={id:e.id,title:e.title};return e.validate&&(t.validate=e.validate),(0,react.useEffect)((()=>{const t=document.getElementById(e.id);t&&e.validate&&(t.validate=e.validate)})),(0,jsx_runtime.jsx)("ta-drawer-slide",{...t,children:e.children})}}}]);
//# sourceMappingURL=overlay-Drawer-Drawer-stories.8b8f4cc6.iframe.bundle.js.map