"use strict";(self.webpackChunkstorybook_react19=self.webpackChunkstorybook_react19||[]).push([[316],{"./src/formFields/select.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CodeAndAccessibility:()=>CodeAndAccessibility,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_tiger_analytics_react_formFields__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../packages/react/dist/formFields/index.js"),_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../packages/react/dist/grid/index.js"),_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/utils/index.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Form/Select",component:_tiger_analytics_react_formFields__WEBPACK_IMPORTED_MODULE_1__.l6,parameters:{controls:{expanded:!0}},argTypes:{id:{description:"Mandatory - unique id for testing",table:{defaultValue:{summary:""}},control:"text"},label:{description:"Label for the select field",table:{defaultValue:{summary:""}},control:"text"},placeholder:{description:"placeholder for select field",table:{defaultValue:{summary:""}},control:"text"},description:{description:"Additional description for the field",table:{defaultValue:{summary:""}},control:"text"},size:{options:[_tiger_analytics_react_formFields__WEBPACK_IMPORTED_MODULE_1__.S9.Default,_tiger_analytics_react_formFields__WEBPACK_IMPORTED_MODULE_1__.S9.Small],description:"Size of the select field",table:{defaultValue:{summary:_tiger_analytics_react_formFields__WEBPACK_IMPORTED_MODULE_1__.S9.Default}},control:{type:"select"}},options:{description:"Options to display in the Select `{ value: string; label: string; disabled?: boolean }[]`",control:!1},onChangeHandler:{description:"`(value: string) => void` Preferred method to use instead of onChange for direct value access.",table:{category:"Events"},control:!1}}},description=react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("b",null,"Note:")," ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("code",null,"Select")," is a customizable dropdown component that supports accessibility, keyboard navigation, and full form compatibility. It inherits all native HTML"," ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("code",null,"select")," attributes except ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("code",null,"value")," and ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("code",null,"defaultValue"),", which are handled via controlled props for consistency.",react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("b",null,"Note:")," You can group related selects using ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("code",null,"fieldset"),"."," ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("a",{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset",target:"_blank",rel:"noreferrer"},"Read more about fieldset"))),CodeAndAccessibility=(args=>{const[selectedValue,setSelectedValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(args.defaultValue||"");return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_2__.E,{showSideMargin:!1},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_utils__WEBPACK_IMPORTED_MODULE_3__.Tx,{importStatement:"import { Select } from '@tiger-analytics/react/formFields';"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_2__.H,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_formFields__WEBPACK_IMPORTED_MODULE_1__.l6,{...args,value:selectedValue,onChangeHandler:setSelectedValue}),react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,"Selected value: ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{id:"selected-value"},selectedValue))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_utils__WEBPACK_IMPORTED_MODULE_3__.ur,{description}))}).bind({});CodeAndAccessibility.args={id:"test-select",label:"Select Label",placeholder:"select an option",description:"Some description for the select field",size:_tiger_analytics_react_formFields__WEBPACK_IMPORTED_MODULE_1__.S9.Default,disabled:!1,options:[{value:"option1",label:"Option One"},{value:"option2",label:"Option Two"},{value:"option3",label:"Option Three",disabled:!0},{value:"option4",label:"Option Four"}]};const __namedExportsOrder=["CodeAndAccessibility"];CodeAndAccessibility.parameters={...CodeAndAccessibility.parameters,docs:{...CodeAndAccessibility.parameters?.docs,source:{originalSource:"(args: SelectProps) => {\n  const [selectedValue, setSelectedValue] = useState(args.defaultValue || '');\n  return <GridContainer showSideMargin={false}>\n      <ImportBlock importStatement={`import { Select } from '@tiger-analytics/react/formFields';`} />\n      <GridColumn>\n        <Select {...args} value={selectedValue} onChangeHandler={setSelectedValue} />\n        <p>\n          Selected value: <span id=\"selected-value\">{selectedValue}</span>\n        </p>\n      </GridColumn>\n      <DescriptionBlock description={description} />\n    </GridContainer>;\n}",...CodeAndAccessibility.parameters?.docs?.source}}}}}]);