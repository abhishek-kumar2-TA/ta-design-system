"use strict";(self.webpackChunkstorybook_react19=self.webpackChunkstorybook_react19||[]).push([[747],{"./src/notification/Alert.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CodeAndAccessibility:()=>CodeAndAccessibility,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_tiger_analytics_react_button__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../packages/react/dist/button/index.js"),_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../packages/react/dist/grid/index.js"),_tiger_analytics_react_notification__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../../packages/react/dist/notification/index.js"),_utils__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./src/utils/index.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Notification/Alert",component:_tiger_analytics_react_notification__WEBPACK_IMPORTED_MODULE_3__.Fc,parameters:{controls:{expanded:!0}},argTypes:{id:{description:"Mandatory - unique id for testing",table:{defaultValue:{summary:""}},control:"text"},visible:{description:"Determines if the notification is visible",table:{defaultValue:{summary:"false"}},control:!1},title:{description:"The title of the notification",table:{defaultValue:{summary:""}},control:"text"},variant:{options:[_tiger_analytics_react_notification__WEBPACK_IMPORTED_MODULE_3__.t7.Error,_tiger_analytics_react_notification__WEBPACK_IMPORTED_MODULE_3__.t7.Info,_tiger_analytics_react_notification__WEBPACK_IMPORTED_MODULE_3__.t7.Success,_tiger_analytics_react_notification__WEBPACK_IMPORTED_MODULE_3__.t7.Warning],description:"The style variant of the notification",table:{defaultValue:{summary:_tiger_analytics_react_notification__WEBPACK_IMPORTED_MODULE_3__.t7.Error}},control:{type:"select"}},idToFocusOnClose:{description:"Accessibility - id of element to focus on close of Alert.",table:{defaultValue:{summary:""}},control:"text"},onClose:{description:"Triggered when the close button is clicked",table:{category:"Custom Events"},control:!1}}},CodeAndAccessibility=(args=>{const[isVisible,setIsVisible]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_2__.E,{showSideMargin:!1},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_utils__WEBPACK_IMPORTED_MODULE_4__.Tx,{importStatement:"import { Alert } from '@tiger-analytics/react/notification';"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_2__.H,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_button__WEBPACK_IMPORTED_MODULE_1__.$n,{id:"toggle-button",variant:_tiger_analytics_react_button__WEBPACK_IMPORTED_MODULE_1__.Ak.Secondary,size:_tiger_analytics_react_button__WEBPACK_IMPORTED_MODULE_1__.Mp.Default,onClick:()=>{setIsVisible(!isVisible)}},"Toggle Notification"),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_notification__WEBPACK_IMPORTED_MODULE_3__.Fc,{id:args.id,visible:isVisible,title:args.title,variant:args.variant,idToFocusOnClose:args.idToFocusOnClose,onClose:()=>{setIsVisible(!1)}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,"This is a notification message."))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_utils__WEBPACK_IMPORTED_MODULE_4__.ur,{description:"The Alert component is used to display alerts or messages to the user. It supports different variants (error by default) and visibility control. The component includes a close button to dismiss the notification.\n"}))}).bind({});CodeAndAccessibility.args={id:"test-notification",visible:!1,title:"This is a notification",variant:"error",idToFocusOnClose:"toggle-button"};const __namedExportsOrder=["CodeAndAccessibility"];CodeAndAccessibility.parameters={...CodeAndAccessibility.parameters,docs:{...CodeAndAccessibility.parameters?.docs,source:{originalSource:"args => {\n  const [isVisible, setIsVisible] = useState(false);\n  const toggleNotification = () => {\n    setIsVisible(!isVisible);\n  };\n  const onCloseHandler = () => {\n    setIsVisible(false);\n  };\n  return <GridContainer showSideMargin={false}>\n      <ImportBlock importStatement={`import { Alert } from '@tiger-analytics/react/notification';`} />\n      <GridColumn>\n        <Button id=\"toggle-button\" variant={ButtonVariant.Secondary} size={ButtonSize.Default} onClick={toggleNotification}>\n          Toggle Notification\n        </Button>\n        <Alert id={args.id} visible={isVisible} title={args.title} variant={args.variant} idToFocusOnClose={args.idToFocusOnClose} onClose={onCloseHandler}>\n          <p>This is a notification message.</p>\n        </Alert>\n      </GridColumn>\n      <DescriptionBlock description={description} />\n    </GridContainer>;\n}",...CodeAndAccessibility.parameters?.docs?.source}}}}}]);