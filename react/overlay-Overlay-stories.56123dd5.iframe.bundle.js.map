{"version":3,"file":"overlay-Overlay-stories.56123dd5.iframe.bundle.js","mappings":";;;;;AAeA;;;ACNA;;AAQA;;;;;;ACFA;;ACbA;;;AAGA;;AAEA;AACA;;AAEA;;;;;AAKA;;AAEA;;;AAGA;;;;AAIA;AACA;AACA;AACA;;;;;AAKA;;;;;AAKA;;;AAGA;;AAEA;;;AAGA;;;;;AAKA;;AAEA;;;;;;;AAOA;;AAEA;;;AAGA;;AAEA;;AAEA;;;AAGA;;;;;AAKA;;AAEA;;;AAGA;;;;;;;AAOA;;AAEA;;AAEA;;;AAGA;;;;;;;AC9FA;AACA;;;;AAIA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;ACdA;;;AAGA;AACA;;;;;AAKA;;AAEA;AACA;AACA;AACA;;;AAGA;;;;;;AAMA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;AAKA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;AC5CA;AACA;;AAEA;;;;;;;;AAQA;;ACZA;;;;;;;;;ACSA;AACA;;;;;;;;;;;;AAYA;;;;AAIA;;;;;;;;;;;;;;;;ACbA;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;AAGA;;;;;;;;;AASA;;;AC/CA;;;ACGA;AACA;AACA;;AAEA;;AAEA;ACTA;;;;;;;;;;;;;ACaA;;;;;;;;;;;;;;;;;;AAkBA;;;;AAIA;;;ACnCA;;;AAAA","sources":["webpack://storybook-react19/./src/utils/ImportBlock.tsx","webpack://storybook-react19/./src/utils/DescriptionBlock.tsx","webpack://storybook-react19/./src/utils/Comment.tsx","webpack://storybook-react19/../../packages/react/dist/button/Base.js","webpack://storybook-react19/../../packages/react/dist/grid/GridColumn.js","webpack://storybook-react19/../../packages/react/dist/grid/GridContainer.js","webpack://storybook-react19/../../packages/react/dist/overlay/Base/styled.js","webpack://storybook-react19/../../packages/react/dist/overlay/Base/index.js","webpack://storybook-react19/../../packages/react/dist/overlay/Modal/styled.js","webpack://storybook-react19/../../packages/react/dist/overlay/Drawer/styled.js","webpack://storybook-react19/../../packages/react/dist/overlay/Drawer/DrawerContext.js","webpack://storybook-react19/../../packages/react/dist/overlay/ArcLoader/styled.js","webpack://storybook-react19/../../packages/react/dist/overlay/ArcLoader/index.js","webpack://storybook-react19/../../packages/react/dist/overlay/SideSheet/styled.js","webpack://storybook-react19/../../packages/react/dist/overlay/SideSheet/index.js"],"sourcesContent":["import { GridColumn } from '@tiger-analytics/react/grid';\nimport React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nexport const ImportBlockDiv = styled.div`\n  padding-bottom: 10px;\n  border-bottom: 1px solid var(--colors-primary-base);\n  margin-bottom: 10px;\n  width: 100%;\n`;\n\nexport interface ImportBlockProps {\n  importStatement: ReactNode;\n}\n\nexport const ImportBlock = ({ importStatement }: ImportBlockProps) => {\n  return (\n    <GridColumn>\n      <ImportBlockDiv>{importStatement}</ImportBlockDiv>\n    </GridColumn>\n  );\n};\n","import { GridColumn, GridContainer } from '@tiger-analytics/react/grid';\nimport React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nexport const DescriptionBeforeSpacer = styled(GridColumn)`\n  border-bottom: 1px solid var(--colors-primary-base);\n  font-weight: bold;\n`;\n\nexport const DescriptionContent = styled(GridColumn)`\n  font-size: 14px;\n`;\n\nexport interface DescriptionBlockProps {\n  description: ReactNode;\n}\n\nexport const DescriptionBlock = ({ description }: DescriptionBlockProps) => {\n  return (\n    <GridContainer showSideMargin={false}>\n      <GridColumn>\n        <DescriptionBeforeSpacer>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        </DescriptionBeforeSpacer>\n      </GridColumn>\n      <DescriptionContent>{description}</DescriptionContent>\n    </GridContainer>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nexport const CommentContainer = styled.div`\n  width: 100%;\n  font-size: 12px;\n  color: var(--colors-success-base);\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport interface CommentBlockProps {\n  children: ReactNode;\n}\n\nexport const CommentBlock = ({ children }: CommentBlockProps) => {\n  return <CommentContainer>{children}</CommentContainer>;\n};\n","import styled,{css}from\"styled-components\";import{getThemeColorValue}from\"../theme/utils\";import{ButtonFillStyle,ButtonSize,ButtonVariant}from\"./types\";export const Button=styled.button`\n  display: inline-flex;\n  width: ${({iconOnly:r=!1,size:o=ButtonSize.Default})=>r?o===ButtonSize.Default?\"44px\":\"30px\":\"100%\"};\n  align-items: center;\n  justify-content: center;\n  height: ${({size:r=ButtonSize.Default})=>r===ButtonSize.Small?\"30px\":\"44px\"};\n  font-size: 20px;\n  font-family: ${({theme:r})=>r.global.specificFontFamily};\n  padding: ${({iconOnly:r=!1})=>r?0:\" 0 1.5rem\"};\n  border: none;\n  border-radius: ${({theme:r})=>r.global.componentRadius};\n  transition: all 0.5s;\n  cursor: pointer;\n  flex-shrink: 0;\n\n  background-color: ${({theme:r,variant:o=ButtonVariant.Primary})=>o===ButtonVariant.Primary?r.colors.primary.base:o===ButtonVariant.Secondary?getThemeColorValue(\"secondary\"):r.colors.error.base};\n\n  color: ${({theme:r,variant:o=ButtonVariant.Primary})=>o===ButtonVariant.Primary?r.colors.textSecondary.base:o===ButtonVariant.Secondary?r.colors.textPrimary.base:r.colors.textSecondary.base};\n\n  svg {\n    fill: ${({theme:r,variant:o=ButtonVariant.Primary})=>o===ButtonVariant.Primary?r.colors.textSecondary.base:o===ButtonVariant.Secondary?r.colors.textPrimary.base:r.colors.textSecondary.base};\n    transition: all 0.5s;\n  }\n\n  ${({theme:r,iconOnly:o=!1,size:a=ButtonSize.Default})=>css`\n    @media screen and (min-width: ${`${r.breakpoints.medium}`}) {\n      width: ${o?a===ButtonSize.Default?\"44px\":\"30px\":\"max-content\"};\n      min-width: ${o?a===ButtonSize.Default?\"44px\":\"30px\":\"120px\"};\n    }\n  `}\n\n  &:hover:not([disabled]) {\n    background-color: ${({theme:r,variant:o=ButtonVariant.Primary})=>o===ButtonVariant.Primary?r.colors.primary.hover:o===ButtonVariant.Secondary?r.colors.secondary.hover:r.colors.error.hover};\n  }\n\n  &:focus:not([disabled]),\n  &:active:not([disabled]) {\n    background-color: ${({theme:r,variant:o=ButtonVariant.Primary})=>o===ButtonVariant.Primary?r.colors.primary.active:o===ButtonVariant.Secondary?r.colors.secondary.active:r.colors.error.active};\n  }\n\n  ${({theme:r,fill:o=ButtonFillStyle.Filled,variant:a=ButtonVariant.Primary})=>o===ButtonFillStyle.None?css`\n        background-color: transparent;\n        color: ${a===ButtonVariant.Primary?r.colors.primary.base:a===ButtonVariant.Secondary?r.colors.secondary.base:r.colors.error.base};\n\n        svg {\n          fill: ${a===ButtonVariant.Primary?r.colors.primary.base:a===ButtonVariant.Secondary?r.colors.secondary.base:r.colors.error.base};\n        }\n\n        &:hover:not([disabled]) {\n          background-color: transparent;\n          color: ${a===ButtonVariant.Primary?r.colors.primary.hover:a===ButtonVariant.Secondary?r.colors.secondary.hover:r.colors.error.hover};\n          svg {\n            fill: ${a===ButtonVariant.Primary?r.colors.primary.hover:a===ButtonVariant.Secondary?r.colors.secondary.hover:r.colors.error.hover};\n          }\n        }\n\n        &:active:not([disabled]),\n        &:focus:not([disabled]) {\n          background-color: transparent;\n          color: ${a===ButtonVariant.Primary?r.colors.primary.active:a===ButtonVariant.Secondary?r.colors.secondary.active:r.colors.error.active};\n          svg {\n            fill: ${a===ButtonVariant.Primary?r.colors.primary.active:a===ButtonVariant.Secondary?r.colors.secondary.active:r.colors.error.active};\n          }\n        }\n      `:o===ButtonFillStyle.Outline?css`\n        background-color: transparent;\n        color: ${a===ButtonVariant.Primary?r.colors.primary.base:a===ButtonVariant.Secondary?r.colors.secondary.base:r.colors.error.base};\n        border: 2px solid\n          ${a===ButtonVariant.Primary?r.colors.primary.base:a===ButtonVariant.Secondary?r.colors.secondary.base:r.colors.error.base};\n\n        svg {\n          fill: ${a===ButtonVariant.Primary?r.colors.primary.base:a===ButtonVariant.Secondary?r.colors.secondary.base:r.colors.error.base};\n        }\n\n        &:hover:not([disabled]) {\n          background-color: transparent;\n          color: ${a===ButtonVariant.Primary?r.colors.primary.hover:a===ButtonVariant.Secondary?r.colors.secondary.hover:r.colors.error.hover};\n          border: 2px solid\n            ${a===ButtonVariant.Primary?r.colors.primary.hover:a===ButtonVariant.Secondary?r.colors.secondary.hover:r.colors.error.hover};\n\n          svg {\n            fill: ${a===ButtonVariant.Primary?r.colors.primary.hover:a===ButtonVariant.Secondary?r.colors.secondary.hover:r.colors.error.hover};\n          }\n        }\n\n        &:focus:not([disabled]),\n        &:active:not([disabled]) {\n          background-color: transparent;\n          color: ${a===ButtonVariant.Primary?r.colors.primary.active:a===ButtonVariant.Secondary?r.colors.secondary.active:r.colors.error.active};\n          border: 2px solid\n            ${a===ButtonVariant.Primary?r.colors.primary.active:a===ButtonVariant.Secondary?r.colors.secondary.active:r.colors.error.active};\n          svg {\n            fill: ${a===ButtonVariant.Primary?r.colors.primary.active:a===ButtonVariant.Secondary?r.colors.secondary.active:r.colors.error.active};\n          }\n        }\n      `:void 0}\n\n  &[disabled] {\n    opacity: 0.7;\n    cursor: inherit;\n  }\n`;","import styled,{css}from\"styled-components\";export const GridColumn=styled.div`\n  grid-column: ${e=>`span ${e.sm||e.theme.grid.small.columns}`};\n  display: ${e=>0===e.sm?\"none\":\"flex\"};\n  flex-direction: column;\n  align-items: 'flex-start';\n\n  ${({theme:e,md:n,lg:m})=>css`\n    @media screen and (min-width: ${`${e.breakpoints.medium}`}) {\n      grid-column: ${e=>`span ${n||m||e.theme.grid.medium.columns}`};\n      display: ${0===n?\"none\":\"flex\"};\n    }\n\n    @media screen and (min-width: ${`${e.breakpoints.large}`}) {\n      grid-column: ${e=>`span ${m||e.theme.grid.large.columns}`};\n      display: ${0===m?\"none\":\"flex\"};\n    }\n  `}\n`;","import styled,{css}from\"styled-components\";export const GridContainer=styled.div`\n  display: grid;\n  width: 100%;\n  grid-gap: ${({theme:i})=>i.grid.small.gutter};\n  grid-template-columns: repeat(${({theme:i})=>i.grid.small.columns}, 1fr);\n  grid-template-rows: initial;\n  grid-auto-rows: initial;\n  margin: 0;\n  max-width: 100%;\n  grid-column: span ${({theme:i})=>i.grid.small.columns};\n\n  ${({showSideMargin:i})=>i&&css`\n      max-width: calc(100% - ${({theme:i})=>i.grid.small.margin} * 2);\n      margin-left: ${({theme:i})=>i.grid.small.margin} !important;\n      margin-right: ${({theme:i})=>i.grid.small.margin} !important;\n    `}\n\n  ${({restrictHeightToMaxContent:i})=>i&&css`\n      grid-template-rows: max-content;\n      grid-auto-rows: max-content;\n    `}\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(${({theme:i})=>i.grid.medium.columns}, 1fr);\n    margin: 0;\n    grid-gap: ${({theme:i})=>i.grid.medium.gutter};\n    max-width: 100%;\n    grid-column: span ${({theme:i})=>i.grid.medium.columns};\n\n    ${({showSideMargin:i})=>i&&css`\n        max-width: calc(100% - ${({theme:i})=>i.grid.medium.margin} * 2);\n        margin-left: ${({theme:i})=>i.grid.medium.margin} !important;\n        margin-right: ${({theme:i})=>i.grid.medium.margin} !important;\n      `}\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: repeat(${({theme:i})=>i.grid.large.columns}, 1fr);\n    margin: 0;\n    grid-gap: ${({theme:i})=>i.grid.large.gutter};\n    grid-column: span ${({theme:i})=>i.grid.large.columns};\n\n    ${({showSideMargin:i})=>i&&css`\n        max-width: calc(100% - ${({theme:i})=>i.grid.large.margin} * 2);\n        margin-left: ${({theme:i})=>i.grid.large.margin} !important;\n        margin-right: ${({theme:i})=>i.grid.large.margin} !important;\n      `}\n  }\n`;","import styled from\"styled-components\";export const OverlayContainer=styled.div`\n  display: ${({visible:e})=>e?\"flex\":\"none\"};\n  align-items: ${({overlayContentAlign:e})=>\"middle\"===e.split(\" \")[0]?\"center\":\"top\"===e.split(\" \")[0]?\"flex-start\":\"flex-end\"};\n\n  justify-content: ${({overlayContentAlign:e})=>\"center\"===e.split(\" \")[1]?\"center\":\"left\"===e.split(\" \")[1]?\"flex-start\":\"flex-end\"};\n\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: 1000;\n  background: ${({visible:e})=>e?\"rgba(0, 0, 0, 0.5)\":\"none\"};\n  transition: all 0.3s ease;\n`;","import{jsx as _jsx}from\"react/jsx-runtime\";import FocusLock from\"react-focus-lock\";import{OverlayContentAlign}from\"../types\";import{OverlayContainer}from\"./styled\";export const Overlay=e=>{const{id:o,visible:t,overlayContentAlign:n=OverlayContentAlign.MiddleCenter,idToFocusOnClose:r,children:i}=e;return _jsx(FocusLock,{disabled:!t,onDeactivation:()=>{r&&setTimeout((()=>{document.getElementById(r)?.focus()}),0)},children:_jsx(OverlayContainer,{id:o,visible:t,overlayContentAlign:n,children:i})})};","import styled,{css}from\"styled-components\";export const ModalContainer=styled.div`\n  background: var(--colors-background-hover);\n  border-radius: var(--global-componentRadius);\n  display: flex;\n  flex-direction: column;\n  padding: 0.5rem 1rem 1rem;\n  width: 90%;\n  max-width: 550px;\n\n  ${({theme:e})=>css`\n    @media screen and (min-width: ${`${e.breakpoints.medium}`}) {\n      width: 70%;\n      max-width: 600px;\n    }\n    @media (min-width: 768px) {\n    }\n  `}\n\n  @media (min-width: 1024px) {\n    width: 50%;\n    max-width: 800px;\n  }\n`;export const ModalHeader=styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 0.5rem;\n`;export const ModalHeaderTitle=styled.h2`\n  flex-grow: 1;\n  color: var(--colors-secondary-base);\n`;","import styled from\"styled-components\";export const DrawerContainer=styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  padding: 0.6rem 1rem;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 444px;\n  height: 100%;\n  background-color: white;\n  box-shadow: -4px 0 10px rgba(0, 0, 0, 0.1);\n  transform: translateX(100%);\n  animation: ${({visible:o})=>o?\"slideIn 0.4s ease-in-out forwards\":\"none\"};\n\n  @keyframes slideIn {\n    from {\n      transform: translateX(100%);\n    }\n    to {\n      transform: translateX(0);\n    }\n  }\n\n  @media (min-width: 768px) {\n    width: 70%;\n    max-width: 600px;\n  }\n\n  h2 {\n    border: 1px solid var(--colors-textPrimary-hover);\n    border-bottom: 2px solid var(--colors-warning-base);\n    border-radius: 5px 5px 0 0;\n    padding: 0 8px;\n  }\n`;export const DrawerBody=styled.div`\n  flex-grow: 1;\n  overflow-y: auto;\n`;export const DrawerFooter=styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-top: 8px;\n  border-top: 1px solid var(--colors-textPrimary-hover);\n\n  button {\n    width: fit-content;\n  }\n`;export const DrawerSlideContainer=styled.div`\n  display: flex;\n  flex-direction: column;\n`;","import{createContext,useContext}from\"react\";import{throwUserError}from\"../../utils\";export const DrawerContext=createContext({setActiveSlide:()=>{}});export const useDrawerController=()=>{let e=e=>{};const t=useContext(DrawerContext);return t?e=t?.setActiveSlide:throwUserError(\"useDrawerController must be used within a Drawer\"),{setActiveSlide:e}};","import styled,{keyframes}from\"styled-components\";export const rotate=keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`;export const LoaderWrapper=styled.div`\n  width: ${({size:r})=>`${r}px`};\n  height: ${({size:r})=>`${r}px`};\n  border-radius: 50%;\n  border: ${({borderColor:r})=>`4px solid ${r}`};\n  border-top-color: transparent;\n  animation: ${rotate} 1s linear infinite;\n`;","import{jsx as _jsx}from\"react/jsx-runtime\";import{Overlay}from\"../Base\";import{LoaderWrapper}from\"./styled\";export const ArcLoader=r=>{const{visible:o=!1,idToFocusOnClose:e,size:s=40,color:a=\"var(--colors-primary-base)\"}=r;return _jsx(Overlay,{id:\"loader-overlay\",visible:o,idToFocusOnClose:e,children:_jsx(LoaderWrapper,{size:s,borderColor:a})})};","import styled from\"styled-components\";export const SideSheetContainer=styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  padding: 0.6rem 1rem;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 444px;\n  height: 100%;\n  background-color: white;\n  box-shadow: -4px 0 10px rgba(0, 0, 0, 0.1);\n  transform: translateX(100%);\n  animation: ${({visible:e})=>e?\"slideIn 0.4s ease-in-out forwards\":\"none\"};\n\n  @keyframes slideIn {\n    from {\n      transform: translateX(100%);\n    }\n    to {\n      transform: translateX(0);\n    }\n  }\n\n  @media (min-width: 768px) {\n    width: 80%;\n    max-width: 800px;\n  }\n\n  h2 {\n  }\n`;export const SideSheetHeader=styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row-reverse;\n`;export const SideSheetBody=styled.div`\n  flex-grow: 1;\n  overflow-y: auto;\n`;export const SideSheetSlideContainer=styled.div`\n  display: flex;\n  flex-direction: column;\n`;","import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";import{Overlay}from\"../Base\";import{Button,ButtonFillStyle,ButtonVariant}from\"../../button\";import{CloseIcon}from\"../../icons\";import{SideSheetBody,SideSheetContainer,SideSheetHeader}from\"./styled\";export const SideSheet=e=>{const{id:i,visible:t,title:o,onClose:l,idToFocusOnClose:r,children:n}=e;return _jsx(Overlay,{id:`${i}-overlay-container`,visible:t,idToFocusOnClose:r,children:_jsxs(SideSheetContainer,{visible:t,role:\"dialog\",\"aria-labelledby\":`${i}-drawer-title`,children:[_jsxs(SideSheetHeader,{children:[_jsx(Button,{style:{alignSelf:\"end\"},id:\"${`${this.id}-close-button`}\",iconOnly:!0,fill:ButtonFillStyle.None,variant:ButtonVariant.Primary,\"aria-label\":\"Close\",onClick:e=>{e.stopPropagation(),l?.()},children:_jsx(CloseIcon,{})}),_jsx(\"h2\",{id:`${i}-drawer-title`,children:o})]}),_jsx(SideSheetBody,{children:n})]})})};"],"names":[],"sourceRoot":""}