"use strict";(self.webpackChunkstorybook_react19=self.webpackChunkstorybook_react19||[]).push([[156],{"./src/table/remote.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CodeAndAccessibility:()=>CodeAndAccessibility,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../packages/react/dist/grid/index.js"),_tiger_analytics_react_table__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../../packages/react/dist/table/index.js"),_utils__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/utils/index.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Table/Remote",component:_tiger_analytics_react_table__WEBPACK_IMPORTED_MODULE_2__.XI,parameters:{controls:{expanded:!0}},argTypes:{}},description=react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",null,"This story simulates server-side pagination and sorting using a mock fetch function.")),fullData=Array.from({length:23},((_,index)=>({id:index+1,name:`User ${index+1}`,email:`user${index+1}@example.com`,age:20+index%10}))),CodeAndAccessibility=(()=>{const[selectedRows,setSelectedRows]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({}),[filterState]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),columns=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)((()=>[{accessorKey:"name",header:"Name",enableSorting:!0},{accessorKey:"email",header:"Email",enableSorting:!1},{accessorKey:"age",header:"Age",enableSorting:!0}]),[]),fetchDataFunction=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((url=>(async url=>{const parsed=new URL(url,"http://localhost"),page=parseInt(parsed.searchParams.get("page")||"1",10)-1,pageSize=parseInt(parsed.searchParams.get("pageSize")||"10",10),sortBy=parsed.searchParams.getAll("sortBy"),sortDir=parsed.searchParams.getAll("sortDir"),sortedData=[...fullData];sortBy.length&&sortDir.length&&sortedData.sort(((a,b)=>{for(let i=0;i<sortBy.length;i++){const key=sortBy[i],direction=sortDir[i];if(a[key]<b[key])return"asc"===direction?-1:1;if(a[key]>b[key])return"asc"===direction?1:-1}return 0}));const sliced=sortedData.slice(page*pageSize,(page+1)*pageSize);return new Promise((resolve=>{setTimeout((()=>{resolve({data:sliced,totalRows:sortedData.length})}),300)}))})(url)),[]),tableProps=(0,_tiger_analytics_react_table__WEBPACK_IMPORTED_MODULE_2__.gk)({baseUrl:"/users",columns,pageSizes:[5,10],filterState,fetchData:fetchDataFunction,enableRowSelection:!0,onRowSelection:setSelectedRows,selectedRows,getRowId:row=>row.id.toString()});return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_utils__WEBPACK_IMPORTED_MODULE_3__.Tx,{importStatement:"import { Table } from '@tiger-analytics/react/table';"}),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_1__.E,{showSideMargin:!1},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_1__.H,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_table__WEBPACK_IMPORTED_MODULE_2__.XI,{id:"remote-table-demo",...tableProps}))),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_utils__WEBPACK_IMPORTED_MODULE_3__.ur,{description}))}).bind({});CodeAndAccessibility.args={};const __namedExportsOrder=["CodeAndAccessibility"];CodeAndAccessibility.parameters={...CodeAndAccessibility.parameters,docs:{...CodeAndAccessibility.parameters?.docs,source:{originalSource:"() => {\n  const [selectedRows, setSelectedRows] = useState<RowSelectionState>({});\n  const [filterState] = useState<{\n    key: string;\n    value: any;\n  }[]>([]);\n  const columns: ColumnDef<User>[] = useMemo(() => [{\n    accessorKey: 'name',\n    header: 'Name',\n    enableSorting: true\n  }, {\n    accessorKey: 'email',\n    header: 'Email',\n    enableSorting: false\n  }, {\n    accessorKey: 'age',\n    header: 'Age',\n    enableSorting: true\n  }], []);\n  const fetchDataFunction = useCallback((url: string): Promise<{\n    data: User[];\n    totalRows: number;\n  }> => {\n    // some fetch api code\n    return mockFetchData(url);\n  }, []);\n  const tableProps = useRemoteTable<User>({\n    baseUrl: '/users',\n    columns,\n    pageSizes: [5, 10],\n    filterState,\n    fetchData: fetchDataFunction,\n    enableRowSelection: true,\n    onRowSelection: setSelectedRows,\n    selectedRows,\n    getRowId: row => row.id.toString()\n  });\n  return <>\n      <ImportBlock importStatement={importStatement} />\n      <GridContainer showSideMargin={false}>\n        <GridColumn>\n          <Table id=\"remote-table-demo\" {...tableProps} />\n        </GridColumn>\n      </GridContainer>\n      <DescriptionBlock description={description} />\n    </>;\n}",...CodeAndAccessibility.parameters?.docs?.source}}}}}]);