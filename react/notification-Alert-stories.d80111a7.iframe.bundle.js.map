{"version":3,"file":"notification-Alert-stories.d80111a7.iframe.bundle.js","mappings":";;;;;AAeA;;;ACNA;;AAQA;;;;;;ACFA;;ACbA;;;AAGA;;AAEA;AACA;;;;;;;AAOA;;AAEA;;;AAGA;;;;AAIA;AACA;AACA;AACA;;;;;AAKA;;;;;AAKA;;;AAGA;;AAEA;;;AAGA;;;;;AAKA;;AAEA;;;;;;;AAOA;;AAEA;;;AAGA;;AAEA;;AAEA;;;AAGA;;;;;AAKA;;AAEA;;;AAGA;;;;;;;AAOA;;AAEA;;AAEA;;;AAGA;;;;;;;AC9FA;AACA;;;;AAIA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;ACdA;;;AAGA;AACA;;;;;AAKA;;AAEA;AACA;AACA;AACA;;;AAGA;;;;;;AAMA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;;;;AAKA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACzCA;AACA;;;;;;;;;;;AAWA;;;;;AAKA;;;;;AAKA;;;;;AAKA;;;;;;;;;;AAUA;;;;;;;;;;;;;;;;;AAiBA;;;AAGA;;;;;AAKA;;;;;;AClEA;ACCA;;;;;;;;;;;AAWA;;;;;;AAMA;;;;;;;;;;AAUA;;;;AAIA;;;;;;;;;;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA","sources":["webpack://storybook-react19/./src/utils/ImportBlock.tsx","webpack://storybook-react19/./src/utils/DescriptionBlock.tsx","webpack://storybook-react19/./src/utils/Comment.tsx","webpack://storybook-react19/../../packages/react/dist/button/Base.js","webpack://storybook-react19/../../packages/react/dist/grid/GridColumn.js","webpack://storybook-react19/../../packages/react/dist/grid/GridContainer.js","webpack://storybook-react19/../../packages/react/dist/notification/Alert/styled.js","webpack://storybook-react19/../../packages/react/dist/notification/Alert/index.js","webpack://storybook-react19/../../packages/react/dist/notification/Snackbar/styled.js"],"sourcesContent":["import { GridColumn } from '@tiger-analytics/react/grid';\nimport React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nexport const ImportBlockDiv = styled.div`\n  padding-bottom: 10px;\n  border-bottom: 1px solid var(--colors-primary-base);\n  margin-bottom: 10px;\n  width: 100%;\n`;\n\nexport interface ImportBlockProps {\n  importStatement: ReactNode;\n}\n\nexport const ImportBlock = ({ importStatement }: ImportBlockProps) => {\n  return (\n    <GridColumn>\n      <ImportBlockDiv>{importStatement}</ImportBlockDiv>\n    </GridColumn>\n  );\n};\n","import { GridColumn, GridContainer } from '@tiger-analytics/react/grid';\nimport React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nexport const DescriptionBeforeSpacer = styled(GridColumn)`\n  border-bottom: 1px solid var(--colors-primary-base);\n  font-weight: bold;\n`;\n\nexport const DescriptionContent = styled(GridColumn)`\n  font-size: 14px;\n`;\n\nexport interface DescriptionBlockProps {\n  description: ReactNode;\n}\n\nexport const DescriptionBlock = ({ description }: DescriptionBlockProps) => {\n  return (\n    <GridContainer showSideMargin={false}>\n      <GridColumn>\n        <DescriptionBeforeSpacer>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        </DescriptionBeforeSpacer>\n      </GridColumn>\n      <DescriptionContent>{description}</DescriptionContent>\n    </GridContainer>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nexport const CommentContainer = styled.div`\n  width: 100%;\n  font-size: 12px;\n  color: var(--colors-success-base);\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport interface CommentBlockProps {\n  children: ReactNode;\n}\n\nexport const CommentBlock = ({ children }: CommentBlockProps) => {\n  return <CommentContainer>{children}</CommentContainer>;\n};\n","import styled,{css}from\"styled-components\";import{getThemeColorValue}from\"../theme/utils\";import{ButtonFillStyle,ButtonSize,ButtonVariant}from\"./types\";export const Button=styled.button`\n  display: inline-flex;\n  width: ${({iconOnly:r=!1,size:o=ButtonSize.Default})=>r?o===ButtonSize.Default?\"44px\":\"30px\":\"100%\"};\n  align-items: center;\n  justify-content: center;\n  height: ${({size:r=ButtonSize.Default})=>r===ButtonSize.Small?\"30px\":\"44px\"};\n  font-size: 20px;\n  font-family: ${({theme:r})=>r.global.specificFontFamily};\n  padding: ${({iconOnly:r=!1})=>r?0:\" 0 1.5rem\"};\n  border: none;\n  border-radius: 5px;\n  transition: all 0.5s;\n  cursor: pointer;\n  flex-shrink: 0;\n\n  background-color: ${({theme:r,variant:o=ButtonVariant.Primary})=>o===ButtonVariant.Primary?r.colors.primary.base:o===ButtonVariant.Secondary?getThemeColorValue(\"secondary\"):r.colors.error.base};\n\n  color: ${({theme:r,variant:o=ButtonVariant.Primary})=>o===ButtonVariant.Primary?r.colors.textSecondary.base:o===ButtonVariant.Secondary?r.colors.textPrimary.base:r.colors.textSecondary.base};\n\n  svg {\n    fill: ${({theme:r,variant:o=ButtonVariant.Primary})=>o===ButtonVariant.Primary?r.colors.textSecondary.base:o===ButtonVariant.Secondary?r.colors.textPrimary.base:r.colors.textSecondary.base};\n    transition: all 0.5s;\n  }\n\n  ${({theme:r,iconOnly:o=!1,size:a=ButtonSize.Default})=>css`\n    @media screen and (min-width: ${`${r.breakpoints.medium}`}) {\n      width: ${o?a===ButtonSize.Default?\"44px\":\"30px\":\"max-content\"};\n      min-width: ${o?a===ButtonSize.Default?\"44px\":\"30px\":\"120px\"};\n    }\n  `}\n\n  &:hover:not([disabled]) {\n    background-color: ${({theme:r,variant:o=ButtonVariant.Primary})=>o===ButtonVariant.Primary?r.colors.primary.hover:o===ButtonVariant.Secondary?r.colors.secondary.hover:r.colors.error.hover};\n  }\n\n  &:focus:not([disabled]),\n  &:active:not([disabled]) {\n    background-color: ${({theme:r,variant:o=ButtonVariant.Primary})=>o===ButtonVariant.Primary?r.colors.primary.active:o===ButtonVariant.Secondary?r.colors.secondary.active:r.colors.error.active};\n  }\n\n  ${({theme:r,fill:o=ButtonFillStyle.Filled,variant:a=ButtonVariant.Primary})=>o===ButtonFillStyle.None?css`\n        background-color: transparent;\n        color: ${a===ButtonVariant.Primary?r.colors.primary.base:a===ButtonVariant.Secondary?r.colors.secondary.base:r.colors.error.base};\n\n        svg {\n          fill: ${a===ButtonVariant.Primary?r.colors.primary.base:a===ButtonVariant.Secondary?r.colors.secondary.base:r.colors.error.base};\n        }\n\n        &:hover:not([disabled]) {\n          background-color: transparent;\n          color: ${a===ButtonVariant.Primary?r.colors.primary.hover:a===ButtonVariant.Secondary?r.colors.secondary.hover:r.colors.error.hover};\n          svg {\n            fill: ${a===ButtonVariant.Primary?r.colors.primary.hover:a===ButtonVariant.Secondary?r.colors.secondary.hover:r.colors.error.hover};\n          }\n        }\n\n        &:active:not([disabled]),\n        &:focus:not([disabled]) {\n          background-color: transparent;\n          color: ${a===ButtonVariant.Primary?r.colors.primary.active:a===ButtonVariant.Secondary?r.colors.secondary.active:r.colors.error.active};\n          svg {\n            fill: ${a===ButtonVariant.Primary?r.colors.primary.active:a===ButtonVariant.Secondary?r.colors.secondary.active:r.colors.error.active};\n          }\n        }\n      `:o===ButtonFillStyle.Outline?css`\n        background-color: transparent;\n        color: ${a===ButtonVariant.Primary?r.colors.primary.base:a===ButtonVariant.Secondary?r.colors.secondary.base:r.colors.error.base};\n        border: 2px solid\n          ${a===ButtonVariant.Primary?r.colors.primary.base:a===ButtonVariant.Secondary?r.colors.secondary.base:r.colors.error.base};\n\n        svg {\n          fill: ${a===ButtonVariant.Primary?r.colors.primary.base:a===ButtonVariant.Secondary?r.colors.secondary.base:r.colors.error.base};\n        }\n\n        &:hover:not([disabled]) {\n          background-color: transparent;\n          color: ${a===ButtonVariant.Primary?r.colors.primary.hover:a===ButtonVariant.Secondary?r.colors.secondary.hover:r.colors.error.hover};\n          border: 2px solid\n            ${a===ButtonVariant.Primary?r.colors.primary.hover:a===ButtonVariant.Secondary?r.colors.secondary.hover:r.colors.error.hover};\n\n          svg {\n            fill: ${a===ButtonVariant.Primary?r.colors.primary.hover:a===ButtonVariant.Secondary?r.colors.secondary.hover:r.colors.error.hover};\n          }\n        }\n\n        &:focus:not([disabled]),\n        &:active:not([disabled]) {\n          background-color: transparent;\n          color: ${a===ButtonVariant.Primary?r.colors.primary.active:a===ButtonVariant.Secondary?r.colors.secondary.active:r.colors.error.active};\n          border: 2px solid\n            ${a===ButtonVariant.Primary?r.colors.primary.active:a===ButtonVariant.Secondary?r.colors.secondary.active:r.colors.error.active};\n          svg {\n            fill: ${a===ButtonVariant.Primary?r.colors.primary.active:a===ButtonVariant.Secondary?r.colors.secondary.active:r.colors.error.active};\n          }\n        }\n      `:void 0}\n\n  &[disabled] {\n    opacity: 0.7;\n    cursor: inherit;\n  }\n`;","import styled,{css}from\"styled-components\";export const GridColumn=styled.div`\n  grid-column: ${e=>`span ${e.sm||e.theme.grid.small.columns}`};\n  display: ${e=>0===e.sm?\"none\":\"flex\"};\n  flex-direction: column;\n  align-items: 'flex-start';\n\n  ${({theme:e,md:n,lg:m})=>css`\n    @media screen and (min-width: ${`${e.breakpoints.medium}`}) {\n      grid-column: ${e=>`span ${n||m||e.theme.grid.medium.columns}`};\n      display: ${0===n?\"none\":\"flex\"};\n    }\n\n    @media screen and (min-width: ${`${e.breakpoints.large}`}) {\n      grid-column: ${e=>`span ${m||e.theme.grid.large.columns}`};\n      display: ${0===m?\"none\":\"flex\"};\n    }\n  `}\n`;","import styled,{css}from\"styled-components\";export const GridContainer=styled.div`\n  display: grid;\n  width: 100%;\n  grid-gap: ${({theme:i})=>i.grid.small.gutter};\n  grid-template-columns: repeat(${({theme:i})=>i.grid.small.columns}, 1fr);\n  grid-template-rows: initial;\n  grid-auto-rows: initial;\n  margin: 0;\n  max-width: 100%;\n  grid-column: span ${({theme:i})=>i.grid.small.columns};\n\n  ${({showSideMargin:i})=>i&&css`\n      max-width: calc(100% - ${({theme:i})=>i.grid.small.margin} * 2);\n      margin-left: ${({theme:i})=>i.grid.small.margin} !important;\n      margin-right: ${({theme:i})=>i.grid.small.margin} !important;\n    `}\n\n  ${({restrictHeightToMaxContent:i})=>i&&css`\n      grid-template-rows: max-content;\n      grid-auto-rows: max-content;\n    `}\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(${({theme:i})=>i.grid.medium.columns}, 1fr);\n    margin: 0;\n    grid-gap: ${({theme:i})=>i.grid.medium.gutter};\n    max-width: 100%;\n    grid-column: span ${({theme:i})=>i.grid.medium.columns};\n\n    ${({showSideMargin:i})=>i&&css`\n        max-width: calc(100% - ${({theme:i})=>i.grid.medium.margin} * 2);\n        margin-left: ${({theme:i})=>i.grid.medium.margin} !important;\n        margin-right: ${({theme:i})=>i.grid.medium.margin} !important;\n      `}\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: repeat(${({theme:i})=>i.grid.large.columns}, 1fr);\n    margin: 0;\n    grid-gap: ${({theme:i})=>i.grid.large.gutter};\n    grid-column: span ${({theme:i})=>i.grid.large.columns};\n\n    ${({showSideMargin:i})=>i&&css`\n        max-width: calc(100% - ${({theme:i})=>i.grid.large.margin} * 2);\n        margin-left: ${({theme:i})=>i.grid.large.margin} !important;\n        margin-right: ${({theme:i})=>i.grid.large.margin} !important;\n      `}\n  }\n`;","import styled,{css}from\"styled-components\";import{NotificationVariant}from\"../types\";export const NotificationContainer=styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;export const NotificationContent=styled.div`\n  display: ${({visible:o})=>o?\"flex\":\"none\"};\n  flex-direction: column;\n  width: 100%;\n  max-width: 600px;\n  margin-left: 20px;\n  margin-right: 20px;\n  border-radius: var(--global-componentRadius);\n  position: fixed;\n  z-index: 100;\n  width: 100%;\n  top: 60px;\n  animation-name: ${({visible:o})=>o?\"notificationOnLoad\":\"\"};\n  animation-duration: 0.6s;\n  animation-timing-function: ease-out;\n  animation-fill-mode: forwards;\n\n  ${({variant:o})=>o===NotificationVariant.Error?css`\n        background-color: var(--colors-error-base);\n        color: var(--colors-background-base);\n        border: 1px solid var(--colors-error-base);\n        box-shadow: 0px 2px 8px 0px var(--colors-error-base);\n      `:o===NotificationVariant.Info?css`\n        background-color: var(--colors-background-active);\n        color: var(--colors-textPrimary-base);\n        border: none;\n        box-shadow: 0px 2px 8px 0px var(--colors-primary-base);\n      `:o===NotificationVariant.Success?css`\n        background-color: var(--colors-success-base);\n        color: var(--colors-background-base);\n        border: 1px solid var(--colors-success-base);\n        box-shadow: 0px 2px 8px 0px var(--colors-success-base);\n        button {\n          svg {\n            fill: var(--colors-background-base) !important;\n          }\n        }\n      `:css`\n        background-color: var(--colors-warning-base);\n        color: var(--colors-textPrimary-base);\n        border: 1px solid var(--colors-warning-base);\n        box-shadow: 0px 2px 8px 0px var(--colors-warning-base);\n      `}\n\n  @keyframes notificationOnLoad {\n    0% {\n      transform: translateY(-100%);\n      opacity: 0;\n    }\n    100% {\n      transform: translateY(0%);\n      opacity: 1;\n    }\n  }\n`;export const NotificationHeader=styled.div`\n  display: flex;\n  align-items: center;\n`;export const NotificationTitle=styled.div`\n  font-family: var(--global-specificFontFamily);\n  flex-grow: 1;\n  padding-left: 1rem;\n  padding-right: 1rem;\n`;export const NotificationAdditionalContent=styled.div`\n  padding-left: 1rem;\n  padding-right: 1rem;\n  margin-right: 40px;\n  font-size: 0.9rem;\n  margin-bottom: 4px;\n`;","import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";import{useEffect,useRef}from\"react\";import{CloseIcon}from\"../../icons\";import{NotificationVariant}from\"../types\";import{Button,ButtonFillStyle,ButtonVariant}from\"../../button\";import{NotificationAdditionalContent,NotificationContainer,NotificationContent,NotificationHeader,NotificationTitle}from\"./styled\";export const Alert=t=>{const{id:i,title:o,visible:n,variant:e=NotificationVariant.Error,onClose:r,idToFocusOnClose:a,children:l}=t,s=useRef(null);return useEffect((()=>{n&&s.current&&s.current.focus()}),[n]),_jsx(NotificationContainer,{id:i,role:\"status\",\"aria-live\":\"assertive\",children:_jsxs(NotificationContent,{visible:!!n,variant:e,children:[_jsxs(NotificationHeader,{children:[_jsx(NotificationTitle,{children:o}),_jsx(Button,{id:`${i}-close-button`,iconOnly:!0,ref:s,fill:e===NotificationVariant.Error?ButtonFillStyle.Filled:ButtonFillStyle.None,variant:e===NotificationVariant.Error?ButtonVariant.Destruct:ButtonVariant.Primary,\"aria-label\":\"Close\",onClick:t=>{r?.(t),a&&document.getElementById(a)?.focus()},children:_jsx(CloseIcon,{})})]}),_jsx(NotificationAdditionalContent,{children:l})]})})};","import styled,{css}from\"styled-components\";import{NotificationVariant}from\"../types\";export const SnackbarContainer=styled.div`\n  display: ${({visible:o})=>o?\"flex\":\"none\"};\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  z-index: 1000;\n  width: 300px;\n  border-radius: var(--global-componentRadius);\n  padding: 8px;\n  transition:\n    opacity 0.5s ease,\n    transform 0.5s ease;\n  animation-name: ${({visible:o})=>o?\"notificationOnShow\":\"notificationOnHide\"};\n  animation-duration: 0.6s;\n  animation-timing-function: ease-out;\n  animation-fill-mode: forwards;\n  gap: 10px;\n\n  ${({variant:o})=>o===NotificationVariant.Error?css`\n        background-color: var(--colors-error-base);\n        color: var(--colors-background-base);\n        border: 1px solid var(--colors-error-base);\n\n        button {\n          svg {\n            fill: var(--colors-background-base) !important;\n          }\n        }\n      `:o===NotificationVariant.Info?css`\n        background-color: var(--colors-background-active);\n        color: var(--colors-textPrimary-base);\n        border: none;\n      `:o===NotificationVariant.Success?css`\n        background-color: var(--colors-success-base);\n        color: var(--colors-background-base);\n        border: 1px solid var(--colors-success-base);\n\n        button {\n          svg {\n            fill: var(--colors-background-base) !important;\n          }\n        }\n      `:css`\n        background-color: var(--colors-warning-base);\n        color: var(--colors-textPrimary-base);\n        border: 1px solid var(--colors-warning-base);\n      `}\n\n  @keyframes notificationOnShow {\n    0% {\n      opacity: 0;\n      transform: translateX(100%);\n    }\n    100% {\n      opacity: 1;\n      transform: translateX(0);\n    }\n  }\n\n  @keyframes notificationOnHide {\n    0% {\n      opacity: 1;\n      transform: translateX(0);\n    }\n    100% {\n      opacity: 0;\n      transform: translateX(100%);\n    }\n  }\n`;export const SnackbarMessage=styled.div`\n  flex-grow: 1;\n  display: flex;\n  align-items: center;\n`;"],"names":[],"sourceRoot":""}