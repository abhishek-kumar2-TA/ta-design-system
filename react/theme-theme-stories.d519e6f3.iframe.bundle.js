"use strict";(self.webpackChunkstorybook_react19=self.webpackChunkstorybook_react19||[]).push([[518],{"./src/theme/theme.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CodeAndAccessibility:()=>CodeAndAccessibility,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js"),_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../packages/react/dist/grid/index.js"),_utils__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/utils/index.ts");const __WEBPACK_DEFAULT_EXPORT__={title:"Theme/Set Theme",tags:["autodocs","!dev"]},CodeAndAccessibility=(()=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_1__.E,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_tiger_analytics_react_grid__WEBPACK_IMPORTED_MODULE_1__.H,{style:{fontSize:"16px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("p",null,"In your entry index.ts/js file, include the following code"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement("pre",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_utils__WEBPACK_IMPORTED_MODULE_2__.bO,null,"// Import the Lit components globally"),"import '@tiger-analytics/ui';",react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_utils__WEBPACK_IMPORTED_MODULE_2__.bO,null,"Global CSS styles for all components"),"import '@tiger-analytics/ui/theme/global-style.css';",react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),"import {createTheme} from '@tiger-analytics/ui/theme';",react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_utils__WEBPACK_IMPORTED_MODULE_2__.bO,null,"// Create the default theme"),"createTheme();"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement("ul",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("li",null,"You can optionally pass the object of type ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("b",null,"Default theme config")," to createTheme() to override the default theme."),react__WEBPACK_IMPORTED_MODULE_0__.createElement("li",null,"You don't need to pass the whole theme obj. You can only pass the value you would like to modify for ex: ",react__WEBPACK_IMPORTED_MODULE_0__.createElement("br",null),react__WEBPACK_IMPORTED_MODULE_0__.createElement("pre",null,'createTheme({\n        colors: {\n            textSecondary: {\n                base: "orange"\n            }\n        }\n    })')),react__WEBPACK_IMPORTED_MODULE_0__.createElement("li",null,"If you need to override global-style.css, you can create your own css file and include it below the import of global-style.css"))))).bind({});CodeAndAccessibility.args={};const __namedExportsOrder=["CodeAndAccessibility"];CodeAndAccessibility.parameters={...CodeAndAccessibility.parameters,docs:{...CodeAndAccessibility.parameters?.docs,source:{originalSource:"() => <GridContainer>\n    <GridColumn style={{\n    fontSize: '16px'\n  }}>\n      <p>In your entry index.ts/js file, include the following code</p>\n      <br />\n      <pre>\n        <CommentBlock>// Import the Lit components globally</CommentBlock>\n        import '@tiger-analytics/ui';\n        <br />\n        <CommentBlock>Global CSS styles for all components</CommentBlock>\n        import '@tiger-analytics/ui/theme/global-style.css';\n        <br />\n        <br />\n        {`import {createTheme} from '@tiger-analytics/ui/theme';`}\n        <br />\n        <CommentBlock>// Create the default theme</CommentBlock>\n        createTheme();\n      </pre>\n      <br />\n      <ul>\n        <li>\n          You can optionally pass the object of type <b>Default theme config</b> to createTheme() to\n          override the default theme.\n        </li>\n        <li>\n          You don't need to pass the whole theme obj. You can only pass the value you would like to\n          modify for ex: <br />\n          <pre>\n            {`createTheme({\n        colors: {\n            textSecondary: {\n                base: \"orange\"\n            }\n        }\n    })`}\n          </pre>\n        </li>\n        <li>\n          If you need to override global-style.css, you can create your own css file and include it\n          below the import of global-style.css\n        </li>\n      </ul>\n    </GridColumn>\n  </GridContainer>",...CodeAndAccessibility.parameters?.docs?.source}}}},"./src/utils/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{bO:()=>CommentBlock,ur:()=>DescriptionBlock,Tx:()=>ImportBlock});var grid=__webpack_require__("../../packages/react/dist/grid/index.js"),react=__webpack_require__("../../node_modules/react/index.js"),styled_components_browser_esm=__webpack_require__("../../node_modules/styled-components/dist/styled-components.browser.esm.js");const ImportBlockDiv=styled_components_browser_esm.Ay.div`
  padding-bottom: 10px;
  border-bottom: 1px solid var(--colors-primary-base);
  margin-bottom: 10px;
  width: 100%;
`,ImportBlock=({importStatement})=>react.createElement(grid.H,null,react.createElement(ImportBlockDiv,null,importStatement));ImportBlock.__docgenInfo={description:"",methods:[],displayName:"ImportBlock",props:{importStatement:{required:!0,tsType:{name:"ReactNode"},description:""}}};const DescriptionBeforeSpacer=(0,styled_components_browser_esm.Ay)(grid.H)`
  border-bottom: 1px solid var(--colors-primary-base);
  font-weight: bold;
`,DescriptionContent=(0,styled_components_browser_esm.Ay)(grid.H)`
  font-size: 14px;
`,DescriptionBlock=({description})=>react.createElement(grid.E,{showSideMargin:!1},react.createElement(grid.H,null,react.createElement(DescriptionBeforeSpacer,null,"       ")),react.createElement(DescriptionContent,null,description));DescriptionBlock.__docgenInfo={description:"",methods:[],displayName:"DescriptionBlock",props:{description:{required:!0,tsType:{name:"ReactNode"},description:""}}};const CommentContainer=styled_components_browser_esm.Ay.div`
  width: 100%;
  font-size: 12px;
  color: var(--colors-success-base);
`,CommentBlock=({children})=>react.createElement(CommentContainer,null,children);CommentBlock.__docgenInfo={description:"",methods:[],displayName:"CommentBlock",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""}}}},"../../packages/react/dist/grid/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{H:()=>GridColumn,E:()=>GridContainer});var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js");const GridColumn=r=>{const s={};return r.sm&&(s.sm=r.sm),r.md&&(s.md=r.md),r.lg&&(s.lg=r.lg),r.style&&(s.style=r.style),(0,jsx_runtime.jsx)("ta-grid-column",{...s,children:r.children})},GridContainer=t=>{const r={};return t.showSideMargin&&(r.showSideMargin=t.showSideMargin),t.restrictHeightToMaxContent&&(r.restrictHeightToMaxContent=t.restrictHeightToMaxContent),t.style&&(r.style=t.style),(0,jsx_runtime.jsx)("ta-grid-container",{...r,children:t.children})}}}]);
//# sourceMappingURL=theme-theme-stories.d519e6f3.iframe.bundle.js.map